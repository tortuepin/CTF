
exec_me:     ファイル形式 elf64-x86-64


セクション .init の逆アセンブル:

00000000004003e0 <_init>:
  4003e0:	48 83 ec 08          	sub    $0x8,%rsp
  4003e4:	48 8b 05 0d 0c 20 00 	mov    0x200c0d(%rip),%rax        # 600ff8 <_DYNAMIC+0x1d0>
  4003eb:	48 85 c0             	test   %rax,%rax
  4003ee:	74 05                	je     4003f5 <_init+0x15>
  4003f0:	e8 3b 00 00 00       	callq  400430 <__gmon_start__@plt>
  4003f5:	48 83 c4 08          	add    $0x8,%rsp
  4003f9:	c3                   	retq   

セクション .plt の逆アセンブル:

0000000000400400 <putchar@plt-0x10>:
  400400:	ff 35 02 0c 20 00    	pushq  0x200c02(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400406:	ff 25 04 0c 20 00    	jmpq   *0x200c04(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40040c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400410 <putchar@plt>:
  400410:	ff 25 02 0c 20 00    	jmpq   *0x200c02(%rip)        # 601018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400416:	68 00 00 00 00       	pushq  $0x0
  40041b:	e9 e0 ff ff ff       	jmpq   400400 <_init+0x20>

0000000000400420 <__libc_start_main@plt>:
  400420:	ff 25 fa 0b 20 00    	jmpq   *0x200bfa(%rip)        # 601020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400426:	68 01 00 00 00       	pushq  $0x1
  40042b:	e9 d0 ff ff ff       	jmpq   400400 <_init+0x20>

0000000000400430 <__gmon_start__@plt>:
  400430:	ff 25 f2 0b 20 00    	jmpq   *0x200bf2(%rip)        # 601028 <_GLOBAL_OFFSET_TABLE_+0x28>
  400436:	68 02 00 00 00       	pushq  $0x2
  40043b:	e9 c0 ff ff ff       	jmpq   400400 <_init+0x20>

セクション .text の逆アセンブル:

0000000000400440 <_start>:
  400440:	31 ed                	xor    %ebp,%ebp
  400442:	49 89 d1             	mov    %rdx,%r9
  400445:	5e                   	pop    %rsi
  400446:	48 89 e2             	mov    %rsp,%rdx
  400449:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40044d:	50                   	push   %rax
  40044e:	54                   	push   %rsp
  40044f:	49 c7 c0 b0 06 40 00 	mov    $0x4006b0,%r8
  400456:	48 c7 c1 40 06 40 00 	mov    $0x400640,%rcx
  40045d:	48 c7 c7 2d 05 40 00 	mov    $0x40052d,%rdi
  400464:	e8 b7 ff ff ff       	callq  400420 <__libc_start_main@plt>
  400469:	f4                   	hlt    
  40046a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400470 <deregister_tm_clones>:
  400470:	b8 47 10 60 00       	mov    $0x601047,%eax
  400475:	55                   	push   %rbp
  400476:	48 2d 40 10 60 00    	sub    $0x601040,%rax
  40047c:	48 83 f8 0e          	cmp    $0xe,%rax
  400480:	48 89 e5             	mov    %rsp,%rbp
  400483:	77 02                	ja     400487 <deregister_tm_clones+0x17>
  400485:	5d                   	pop    %rbp
  400486:	c3                   	retq   
  400487:	b8 00 00 00 00       	mov    $0x0,%eax
  40048c:	48 85 c0             	test   %rax,%rax
  40048f:	74 f4                	je     400485 <deregister_tm_clones+0x15>
  400491:	5d                   	pop    %rbp
  400492:	bf 40 10 60 00       	mov    $0x601040,%edi
  400497:	ff e0                	jmpq   *%rax
  400499:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004004a0 <register_tm_clones>:
  4004a0:	b8 40 10 60 00       	mov    $0x601040,%eax
  4004a5:	55                   	push   %rbp
  4004a6:	48 2d 40 10 60 00    	sub    $0x601040,%rax
  4004ac:	48 c1 f8 03          	sar    $0x3,%rax
  4004b0:	48 89 e5             	mov    %rsp,%rbp
  4004b3:	48 89 c2             	mov    %rax,%rdx
  4004b6:	48 c1 ea 3f          	shr    $0x3f,%rdx
  4004ba:	48 01 d0             	add    %rdx,%rax
  4004bd:	48 d1 f8             	sar    %rax
  4004c0:	75 02                	jne    4004c4 <register_tm_clones+0x24>
  4004c2:	5d                   	pop    %rbp
  4004c3:	c3                   	retq   
  4004c4:	ba 00 00 00 00       	mov    $0x0,%edx
  4004c9:	48 85 d2             	test   %rdx,%rdx
  4004cc:	74 f4                	je     4004c2 <register_tm_clones+0x22>
  4004ce:	5d                   	pop    %rbp
  4004cf:	48 89 c6             	mov    %rax,%rsi
  4004d2:	bf 40 10 60 00       	mov    $0x601040,%edi
  4004d7:	ff e2                	jmpq   *%rdx
  4004d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004004e0 <__do_global_dtors_aux>:
  4004e0:	80 3d 59 0b 20 00 00 	cmpb   $0x0,0x200b59(%rip)        # 601040 <__TMC_END__>
  4004e7:	75 11                	jne    4004fa <__do_global_dtors_aux+0x1a>
  4004e9:	55                   	push   %rbp
  4004ea:	48 89 e5             	mov    %rsp,%rbp
  4004ed:	e8 7e ff ff ff       	callq  400470 <deregister_tm_clones>
  4004f2:	5d                   	pop    %rbp
  4004f3:	c6 05 46 0b 20 00 01 	movb   $0x1,0x200b46(%rip)        # 601040 <__TMC_END__>
  4004fa:	f3 c3                	repz retq 
  4004fc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400500 <frame_dummy>:
  400500:	48 83 3d 18 09 20 00 	cmpq   $0x0,0x200918(%rip)        # 600e20 <__JCR_END__>
  400507:	00 
  400508:	74 1e                	je     400528 <frame_dummy+0x28>
  40050a:	b8 00 00 00 00       	mov    $0x0,%eax
  40050f:	48 85 c0             	test   %rax,%rax
  400512:	74 14                	je     400528 <frame_dummy+0x28>
  400514:	55                   	push   %rbp
  400515:	bf 20 0e 60 00       	mov    $0x600e20,%edi
  40051a:	48 89 e5             	mov    %rsp,%rbp
  40051d:	ff d0                	callq  *%rax
  40051f:	5d                   	pop    %rbp
  400520:	e9 7b ff ff ff       	jmpq   4004a0 <register_tm_clones>
  400525:	0f 1f 00             	nopl   (%rax)
  400528:	e9 73 ff ff ff       	jmpq   4004a0 <register_tm_clones>

000000000040052d <main>:
  40052d:	55                   	push   %rbp
  40052e:	48 89 e5             	mov    %rsp,%rbp
  400531:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
  400535:	c7 45 90 4d 00 00 00 	movl   $0x4d,-0x70(%rbp)
  40053c:	c7 45 94 5a 00 00 00 	movl   $0x5a,-0x6c(%rbp)
  400543:	c7 45 98 4b 00 00 00 	movl   $0x4b,-0x68(%rbp)
  40054a:	c7 45 9c 61 00 00 00 	movl   $0x61,-0x64(%rbp)
  400551:	c7 45 a0 65 00 00 00 	movl   $0x65,-0x60(%rbp)
  400558:	c7 45 a4 2e 00 00 00 	movl   $0x2e,-0x5c(%rbp)
  40055f:	c7 45 a8 59 00 00 00 	movl   $0x59,-0x58(%rbp)
  400566:	c7 45 ac 49 00 00 00 	movl   $0x49,-0x54(%rbp)
  40056d:	c7 45 b0 63 00 00 00 	movl   $0x63,-0x50(%rbp)
  400574:	c7 45 b4 59 00 00 00 	movl   $0x59,-0x4c(%rbp)
  40057b:	c7 45 b8 5f 00 00 00 	movl   $0x5f,-0x48(%rbp)
  400582:	c7 45 bc 49 00 00 00 	movl   $0x49,-0x44(%rbp)
  400589:	c7 45 c0 55 00 00 00 	movl   $0x55,-0x40(%rbp)
  400590:	c7 45 c4 58 00 00 00 	movl   $0x58,-0x3c(%rbp)
  400597:	c7 45 c8 59 00 00 00 	movl   $0x59,-0x38(%rbp)
  40059e:	c7 45 cc 61 00 00 00 	movl   $0x61,-0x34(%rbp)
  4005a5:	c7 45 d0 49 00 00 00 	movl   $0x49,-0x30(%rbp)
  4005ac:	c7 45 d4 2f 00 00 00 	movl   $0x2f,-0x2c(%rbp)
  4005b3:	c7 45 d8 36 00 00 00 	movl   $0x36,-0x28(%rbp)
  4005ba:	c7 45 dc 30 00 00 00 	movl   $0x30,-0x24(%rbp)
  4005c1:	c7 45 e0 49 00 00 00 	movl   $0x49,-0x20(%rbp)
  4005c8:	c7 45 e4 50 00 00 00 	movl   $0x50,-0x1c(%rbp)
  4005cf:	c7 45 e8 53 00 00 00 	movl   $0x53,-0x18(%rbp)
  4005d6:	c7 45 ec 56 00 00 00 	movl   $0x56,-0x14(%rbp)
  4005dd:	c7 45 f0 4f 00 00 00 	movl   $0x4f,-0x10(%rbp)
  4005e4:	c7 45 f4 29 00 00 00 	movl   $0x29,-0xc(%rbp)
  4005eb:	c7 45 f8 67 00 00 00 	movl   $0x67,-0x8(%rbp)
  4005f2:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%rbp)
  4005f9:	c7 45 8c 00 00 00 00 	movl   $0x0,-0x74(%rbp)
  400600:	eb 1e                	jmp    400620 <main+0xf3>
  400602:	8b 45 8c             	mov    -0x74(%rbp),%eax
  400605:	48 98                	cltq   
  400607:	8b 44 85 90          	mov    -0x70(%rbp,%rax,4),%eax
  40060b:	83 c0 16             	add    $0x16,%eax
  40060e:	88 45 8b             	mov    %al,-0x75(%rbp)
  400611:	0f be 45 8b          	movsbl -0x75(%rbp),%eax
  400615:	89 c7                	mov    %eax,%edi
  400617:	e8 f4 fd ff ff       	callq  400410 <putchar@plt>
  40061c:	83 45 8c 01          	addl   $0x1,-0x74(%rbp)
  400620:	83 7d 8c 1a          	cmpl   $0x1a,-0x74(%rbp)
  400624:	7e dc                	jle    400602 <main+0xd5>
  400626:	bf 0a 00 00 00       	mov    $0xa,%edi
  40062b:	e8 e0 fd ff ff       	callq  400410 <putchar@plt>
  400630:	b8 00 00 00 00       	mov    $0x0,%eax
  400635:	c9                   	leaveq 
  400636:	c3                   	retq   
  400637:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40063e:	00 00 

0000000000400640 <__libc_csu_init>:
  400640:	41 57                	push   %r15
  400642:	41 89 ff             	mov    %edi,%r15d
  400645:	41 56                	push   %r14
  400647:	49 89 f6             	mov    %rsi,%r14
  40064a:	41 55                	push   %r13
  40064c:	49 89 d5             	mov    %rdx,%r13
  40064f:	41 54                	push   %r12
  400651:	4c 8d 25 b8 07 20 00 	lea    0x2007b8(%rip),%r12        # 600e10 <__frame_dummy_init_array_entry>
  400658:	55                   	push   %rbp
  400659:	48 8d 2d b8 07 20 00 	lea    0x2007b8(%rip),%rbp        # 600e18 <__init_array_end>
  400660:	53                   	push   %rbx
  400661:	4c 29 e5             	sub    %r12,%rbp
  400664:	31 db                	xor    %ebx,%ebx
  400666:	48 c1 fd 03          	sar    $0x3,%rbp
  40066a:	48 83 ec 08          	sub    $0x8,%rsp
  40066e:	e8 6d fd ff ff       	callq  4003e0 <_init>
  400673:	48 85 ed             	test   %rbp,%rbp
  400676:	74 1e                	je     400696 <__libc_csu_init+0x56>
  400678:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40067f:	00 
  400680:	4c 89 ea             	mov    %r13,%rdx
  400683:	4c 89 f6             	mov    %r14,%rsi
  400686:	44 89 ff             	mov    %r15d,%edi
  400689:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40068d:	48 83 c3 01          	add    $0x1,%rbx
  400691:	48 39 eb             	cmp    %rbp,%rbx
  400694:	75 ea                	jne    400680 <__libc_csu_init+0x40>
  400696:	48 83 c4 08          	add    $0x8,%rsp
  40069a:	5b                   	pop    %rbx
  40069b:	5d                   	pop    %rbp
  40069c:	41 5c                	pop    %r12
  40069e:	41 5d                	pop    %r13
  4006a0:	41 5e                	pop    %r14
  4006a2:	41 5f                	pop    %r15
  4006a4:	c3                   	retq   
  4006a5:	66 66 2e 0f 1f 84 00 	data16 nopw %cs:0x0(%rax,%rax,1)
  4006ac:	00 00 00 00 

00000000004006b0 <__libc_csu_fini>:
  4006b0:	f3 c3                	repz retq 

セクション .fini の逆アセンブル:

00000000004006b4 <_fini>:
  4006b4:	48 83 ec 08          	sub    $0x8,%rsp
  4006b8:	48 83 c4 08          	add    $0x8,%rsp
  4006bc:	c3                   	retq   
